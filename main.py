from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackQueryHandler
from core import hosting, security, dashboard
from utilities import database, file_manager
import logging

# ‡§≤‡•â‡§ó‡§ø‡§Ç‡§ó ‡§ï‡•â‡§®‡•ç‡§´‡§ø‡§ó‡§∞‡•á‡§∂‡§®
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def start(update, context):
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="ü§ñ ‡§¨‡•â‡§ü ‡§π‡•ã‡§∏‡•ç‡§ü‡§ø‡§Ç‡§ó ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à!\n\n"
             "‡§®‡§Ø‡§æ ‡§¨‡•â‡§ü ‡§π‡•ã‡§∏‡•ç‡§ü ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è /host ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç"
    )

def error(update, context):
    logger.warning(f'Update {update} caused error {context.error}')

def main():
    updater = Updater(token="YOUR_BOT_TOKEN", use_context=True)
    dp = updater.dispatcher

    # ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§π‡•à‡§Ç‡§°‡§≤‡§∞
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("host", hosting.start_hosting))
    dp.add_handler(CommandHandler("dashboard", dashboard.show_dashboard))
    
    # ‡§´‡§æ‡§á‡§≤ ‡§Ö‡§™‡§≤‡•ã‡§° ‡§π‡•à‡§Ç‡§°‡§≤‡§∞
    dp.add_handler(MessageHandler(Filters.document, hosting.handle_upload))
    
    # ‡§è‡§∞‡§∞ ‡§π‡•à‡§Ç‡§°‡§≤‡§∞
    dp.add_error_handler(error)

    updater.start_polling()
    logger.info("‡§¨‡•â‡§ü ‡§∏‡•ç‡§ü‡§æ‡§∞‡•ç‡§ü ‡§π‡•ã ‡§ó‡§Ø‡§æ ‡§π‡•à...")
    updater.idle()

if __name__ == "__main__":
    main()
